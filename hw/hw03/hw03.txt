The following program submission has been recorded:

Student: dlender
Class: CS159
Section: 29958
Assignment: hw03.c
Submission: 2021-03-01 19:31

If the above is incorrect, you are responsible for resubmitting the assignment or seeking assistance from a course staff member prior to the due date! Assignments will never be accepted by e-mail.

If this is for a lab assignment, only one member must be designated to make a submission for the group.  Graders will not evaluate submissions from multiple group members to determine which effort you actually want graded.

*** Please do not reply to this email ***

The contents of the submission:
     1	/***************************************************************************
     2	*
     3	*  Programmer and Purdue Email Address:
     4	*  1. dlender@purdue.edu
     5	*
     6	*  Homework #3:
     7	*
     8	*  Academic Integrity Statement:
     9	*
    10	*  I have not used source code obtained from any other unauthorized source, 
    11	*  either modified or unmodified.  Neither have I provided access to my code 
    12	*  to another. The effort I am submitting is my own original work.
    13	*
    14	*  Day, Time, Location of Lab: Monday 1:30 SC
    15	*
    16	*  Program Description:
    17	*  This program calculates the time it takes for a projectile to reach its
    18	*  maximum height, the maximum height, the time it takes it to hit the ground
    19	*  and the total distance traveled. It calculates these using inputted
    20	*  initial height, velocity and angles.
    21	***************************************************************************/
    22	
    23	#include <stdio.h> //includes standard input/output functions
    24	#include <math.h> //includes standard math library functions
    25	
    26	double max_t_calc(double vel0, double angle); //defines the function used to calculate max time
    27	void max_h_calc(double vel0, double angle, double max_time,double l_height); //defines the function used to calculate max height
    28	double time_ground(double vel0, double angle, double l_height); //defines the function used to calculate the time it takes to hit the ground
    29	void total_travel(double vel0, double angle, double l_height); //defines the function that calculates the total distance traveled
    30	double h_input(); //defines the function used to get the height input
    31	double v_input(); //defines the function used to get the velocity input
    32	double a_input(); //defines the function used to get the angle input
    33	
    34	int main()
    35	{
    36	  double l_height; //defines the launch height
    37	  double vel0; //defines the intial velocity
    38	  double angle; //defines the initial angle
    39	  double max_time; //defines how long it takes to reach the max height 
    40	  double time_to_ground; //defines how long it takes to hit the ground 
    41	
    42	  //uses UDFs to recieve user inputs
    43	  l_height = h_input();
    44	  vel0 = v_input();
    45	  angle = a_input() * M_PI / 180; //converts angle from degress to radians
    46	  
    47	  //executes user defined functions that calculate all the parts and displays the answers
    48	  max_time = max_t_calc(vel0,angle);
    49	  max_h_calc(vel0, angle, max_time,l_height);
    50	  time_to_ground = time_ground(vel0, angle, l_height);
    51	  total_travel(vel0,angle,time_to_ground);
    52	
    53	  return(0);
    54	}
    55	
    56	/***************************************************************************
    57	*
    58	*  Function Information
    59	*
    60	*  Name of Function: h_input
    61	*
    62	*  Function Return Type:double
    63	*
    64	*  Parameters (list data type, name, and comment one per line):
    65	*
    66	*  Function Description:
    67	*  This function displays a statement and saves the input for launch height.
    68	*
    69	***************************************************************************/
    70	
    71	double h_input()
    72	{
    73	  double l_height; //defines the launch height
    74	  //displays a prompt and looks for input
    75	  printf("Enter height of launch [m] -> ");
    76	  scanf("%lf",&l_height);
    77	  return(l_height);
    78	}
    79	
    80	/***************************************************************************
    81	*
    82	*  Function Information
    83	*
    84	*  Name of Function: v_input
    85	*
    86	*  Function Return Type:double
    87	*
    88	*  Parameters (list data type, name, and comment one per line):
    89	*
    90	*  Function Description:
    91	*  This function displays a statement and saves the input for initial velocity.
    92	*
    93	***************************************************************************/
    94	
    95	double v_input()
    96	{
    97	  double vel0; //defines the initial velocity
    98	  //displays a prompt and looks for input
    99	  printf("Enter initial velocity [m/s] -> ");
   100	  scanf("%lf",&vel0);
   101	  return(vel0);
   102	}
   103	
   104	/***************************************************************************
   105	*
   106	*  Function Information
   107	*
   108	*  Name of Function: a_input
   109	*
   110	*  Function Return Type:double
   111	*
   112	*  Parameters (list data type, name, and comment one per line):
   113	*
   114	*  Function Description:
   115	*  This function displays a statement and saves the input for input angle.
   116	*
   117	***************************************************************************/
   118	
   119	double a_input()
   120	{
   121	  double angle; //defines the angle
   122	  //displays a prompt and looks for input
   123	  printf("Enter angle to the horizontal [degrees] -> ");
   124	  scanf("%lf",&angle);
   125	  return(angle);
   126	}
   127	
   128	/***************************************************************************
   129	*
   130	*  Function Information
   131	*
   132	*  Name of Function: max_t_calc
   133	*
   134	*  Function Return Type:double
   135	*
   136	*  Parameters (list data type, name, and comment one per line):
   137	*    1.double vel0 //variable for the initial velocity
   138	*    2.double angle //variable for the angle 
   139	*
   140	*  Function Description:
   141	*  This function calculates the time it takes for the projectile to reach its 
   142	*  maximum height. 
   143	***************************************************************************/
   144	
   145	double max_t_calc(double vel0, double angle)
   146	{
   147	  double time_m; //defines the variable for time
   148	  //calculates the time it takes to reach the max height
   149	  time_m = vel0 * sin(angle) / 9.8;
   150	  printf("\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-");
   151	  printf("\nTime to max height:%20.2lf s",time_m);
   152	  return(time_m);
   153	}
   154	
   155	/***************************************************************************
   156	*
   157	*  Function Information
   158	*
   159	*  Name of Function:max_h_calc
   160	*
   161	*  Function Return Type:void
   162	*
   163	*  Parameters (list data type, name, and comment one per line):
   164	*    1. double vel0 //variable for the inital velocity
   165	*    2. double angle //variable for the angle
   166	*    3. double max_time //variable for the time to max height
   167	*    4. double l_height //variable for initial launch height
   168	*
   169	*  Function Description:
   170	*  This function calculates the maximum height the projectile reaches.
   171	***************************************************************************/
   172	
   173	void max_h_calc(double vel0, double angle, double max_time,double l_height)
   174	{
   175	  double max_h; //defines the max height
   176	  //calculates the max height the projectile reaches
   177	  max_h = vel0 * sin(angle) * max_time - .5 * 9.8 * pow(max_time,2) + l_height;
   178	  printf("\nMaximum height reached:%16.2lf m",max_h);
   179	}
   180	
   181	/***************************************************************************
   182	*
   183	*  Function Information
   184	*
   185	*  Name of Function: time_ground
   186	*
   187	*  Function Return Type:double
   188	*
   189	*  Parameters (list data type, name, and comment one per line):
   190	*    1.double vel0 //variable for the initial velocity
   191	*    2.double angle //variable for the angle 
   192	*    3. double l_height //variable for initial launch height
   193	*
   194	*  Function Description:
   195	*  This function calculates the time it would take the projectile to 
   196	*  hit the ground.
   197	***************************************************************************/
   198	
   199	double time_ground(double vel0, double angle, double l_height)
   200	{
   201	  double a; //defines a for the quadratic equation
   202	  double b; //defines b for the quadratic equation
   203	  double c; //defines c for the quadratic equation
   204	  double quad_reg; //defines the answer for the quadratic equation
   205	
   206	  //executse the quadratic equation and returns the results using the numbers 
   207	  //to find the time it takes to hit the ground
   208	  a = -.5 * 9.8;
   209	  b = sin(angle) * vel0;
   210	  c = l_height;
   211	  quad_reg = (-b - sqrt(pow(b,2) - 4 * a *c )) / (2 * a);
   212	  printf("\nTime to hit ground:%20.2lf s",quad_reg);
   213	  return(quad_reg);
   214	}
   215	
   216	/***************************************************************************
   217	*
   218	*  Function Information
   219	*
   220	*  Name of Function: total_travel
   221	*
   222	*  Function Return Type:void
   223	*
   224	*  Parameters (list data type, name, and comment one per line):
   225	*    1.double vel0 //variable for the initial velocity
   226	*    2.double angle //variable for the angle 
   227	*    3.double l_height //variable for initial launch height
   228	*
   229	*  Function Description:
   230	*  This function calculates the total distance traveled by the projectile.
   231	***************************************************************************/
   232	
   233	void total_travel(double vel0, double angle, double l_height)
   234	{
   235	  double dist; //defines the total distance traveled
   236	  //calculates the total distance traveled and displays the results
   237	  dist = vel0 * cos(angle) * l_height;
   238	  printf("\nTotal distance traveled:%15.2lf m",dist);
   239	  printf("\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-\n");
   240	}